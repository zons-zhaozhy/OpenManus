#!/bin/bash

# 设置颜色
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# 输出带颜色的消息
echo_color() {
    color=$1
    message=$2
    echo -e "${color}${message}${NC}"
}

# 检查Python版本
echo_color $GREEN "🚀 启动 OpenManus AI软件公司..."
echo_color $YELLOW "🐍 使用Python: $(which python)"
python --version

# 检查Node.js版本
echo_color $YELLOW "📦 检查Node.js环境..."
if ! command -v node &> /dev/null; then
    echo_color $RED "❌ 未找到Node.js，请先安装Node.js"
    exit 1
fi
echo_color $GREEN "✅ Node.js版本: $(node --version)"
echo_color $GREEN "✅ npm版本: $(npm --version)"

# 检查端口占用
echo_color $YELLOW "🔍 检查端口占用情况..."
if lsof -i:8000 > /dev/null; then
    echo_color $YELLOW "⚠️  端口 8000 被占用，正在停止相关进程..."
    kill $(lsof -t -i:8000)
fi

if lsof -i:5173 > /dev/null; then
    echo_color $YELLOW "⚠️  端口 5173 被占用，正在停止相关进程..."
    kill $(lsof -t -i:5173)
fi

# 启动后端服务
echo_color $YELLOW "🔥 启动后端服务 (端口: 8000)..."
python run_mcp_server.py > logs/backend.log 2>&1 &
backend_pid=$!
echo "后端服务 PID: $backend_pid"

# 等待后端服务启动
echo_color $YELLOW "⏳ 等待后端服务启动（最多等待120秒）..."
start_time=$(date +%s)
timeout=120

while true; do
    elapsed=$(($(date +%s) - start_time))
    if [ $elapsed -ge $timeout ]; then
        echo_color $RED "❌ 后端服务启动超时"
        kill $backend_pid
        exit 1
    fi

    echo_color $YELLOW "   等待中... (${elapsed}s/${timeout}s) - 后端正在初始化"
    if curl -s http://localhost:8000/docs > /dev/null; then
        echo_color $GREEN "✅ 后端服务启动成功 (http://localhost:8000) - 耗时: ${elapsed}秒"
        break
    fi
    sleep 5
done

# 启动前端服务
echo_color $YELLOW "🌐 启动前端服务 (端口: 5173)..."
cd app/web
if [ ! -d "node_modules" ]; then
    echo_color $YELLOW "📦 安装前端依赖..."
    npm install
fi
npm run dev > ../../logs/frontend.log 2>&1 &
frontend_pid=$!
cd ../..

# 等待前端服务启动
echo_color $YELLOW "⏳ 等待前端服务启动（最多等待60秒）..."
start_time=$(date +%s)
timeout=60

while true; do
    elapsed=$(($(date +%s) - start_time))
    if [ $elapsed -ge $timeout ]; then
        echo_color $RED "❌ 前端服务启动超时"
        kill $frontend_pid
        kill $backend_pid
        exit 1
    fi

    echo_color $YELLOW "   等待中... (${elapsed}s/${timeout}s) - 前端正在初始化"
    if curl -s http://localhost:5173 > /dev/null; then
        echo_color $GREEN "✅ 前端服务启动成功 (http://localhost:5173) - 耗时: ${elapsed}秒"
        break
    fi
    sleep 5
done

# 保存进程ID
echo "$backend_pid" > .openmanus_pids
echo "$frontend_pid" >> .openmanus_pids

# 输出启动成功信息
echo_color $GREEN "🎉 OpenManus AI软件公司启动完成！"
echo_color $YELLOW "📋 服务信息："
echo "   后端服务: http://localhost:8000"
echo "   前端服务: http://localhost:5173"
echo "   API 文档: http://localhost:8000/docs"
echo_color $YELLOW "📝 日志文件："
echo "   后端日志: logs/backend.log"
echo "   前端日志: logs/frontend.log"
echo_color $YELLOW "🛑 停止服务："
echo "   kill $backend_pid $frontend_pid"
echo_color $GREEN "✨ 服务进程ID已保存到 .openmanus_pids 文件"
